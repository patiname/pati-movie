{"version":3,"sources":["components/Footer.js","components/Header.js","components/ScrollTop.js","components/Container.js","api.js","routes/Detail/Detail.js","routes/Home/Content.js","routes/Home/Home.js","routes/Search/Search.js","styeld.js","App.js","index.js"],"names":["SFooter","styled","footer","Footer","SHeader","header","Logo","div","MenuWrap","ul","Menu","li","Header","useState","headerBg","setHeaderBg","window","addEventListener","sct","pageYOffset","style","backgroundColor","to","ScrollTop","pathname","useLocation","useEffect","scrollTo","Section","section","Container","children","api","axios","create","baseURL","params","api_key","language","moviesApi","nowPlaying","a","get","upComing","popular","movieDetail","id","search","term","query","encodeURIComponent","ConWrap","CoverImg","Con","ConTitle","Release","Genres","RunTime","Desc","Detail","useParams","detail","setDetail","data","movieDetailData","backgroundImage","backdrop_path","title","release_date","genres","map","genre","name","runtime","overview","NowWrap","NowPlayTitle","h3","ConBg","SwiperCore","use","Navigation","Content","movie","navigation","slidesPerView","spaceBetween","breakpoints","now","className","Main","TitleWrap","Title","SubTitle","p","Home","setNowPlaying","setUpComing","setpPopular","loading","setLoading","results","movieData","slice","Form","form","Input","input","ItemWrap","Bg","ItemTitle","Search","setSearch","useForm","mode","register","getValues","handleSubmit","onSubmit","required","type","placeholder","GlobalStyles","createGlobalStyle","reset","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3b153fc.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst SFooter = styled.footer`\n  padding: 50px 0 30px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-top: 1px solid #333;\n  margin-top: 150px;\n`;\n\nexport const Footer = () => {\n  return <SFooter>&copy; 2021 PatiName</SFooter>;\n};\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SHeader = styled.header`\n  width: 100%;\n  height: 60px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  padding: 0 80px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 10;\n  transition: 0.5s;\n  @media screen and (max-width: 500px) {\n    padding: 15px;\n  }\n`;\n\nconst Logo = styled.div`\n  font-size: 25px;\n  font-weight: 700;\n  a {\n    color: crimson;\n  }\n  text-shadow: 0 0px 5px rgba(0, 0, 0, 0.3);\n`;\n\nconst MenuWrap = styled.ul`\n  max-width: 100px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  a {\n    color: white;\n  }\n`;\n\nconst Menu = styled.li`\n  &:hover {\n    a {\n      color: gray;\n    }\n  }\n`;\n\nexport const Header = () => {\n  const [headerBg, setHeaderBg] = useState(\"\");\n\n  const handleScroll = () => {\n    const sct = window.pageYOffset;\n    if (sct >= 150) {\n      setHeaderBg(\"#1d1d1d\");\n    } else {\n      setHeaderBg(\"transparent\");\n    }\n  };\n\n  window.addEventListener(\"scroll\", handleScroll);\n\n  return (\n    <SHeader style={{ backgroundColor: headerBg }}>\n      <Logo>\n        <Link to=\"/\">PATI</Link>\n      </Logo>\n\n      <MenuWrap>\n        <Menu>\n          <Link to=\"/\">홈</Link>\n        </Menu>\n        <Menu>\n          <Link to=\"/search\">탐색하기</Link>\n        </Menu>\n      </MenuWrap>\n    </SHeader>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const ScrollTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname === \"/\" ? null : pathname]);\n\n  return null;\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.section`\n  width: 100%;\n  padding: 0 80px;\n  @media screen and (max-width: 500px) {\n    padding: 0 15px;\n  }\n`;\n\nexport const Container = ({ children }) => <Section>{children}</Section>;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"127c866ecb9630df124cbd4e2522af1c\",\n    language: \"ko-KR\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: async () => await api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) => api.get(`movie/${id}`),\n  search: (term) =>\n    api.get(\"search/movie\", { params: { query: encodeURIComponent(term) } }),\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from \"../../components/Container\";\nimport { moviesApi } from \"../../api\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst ConWrap = styled.div`\n  padding-top: 120px;\n  display: flex;\n  justify-content: space-between;\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    padding-top: 80px;\n  }\n`;\n\nconst CoverImg = styled.div`\n  width: 52%;\n  height: 700px;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  @media screen and (max-width: 500px) {\n    background-size: 140%;\n    width: 100%;\n    height: 300px;\n    background-position: top;\n  }\n`;\n\nconst Con = styled.div`\n  width: 46%;\n  height: 700px;\n  padding: 50px;\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n\nconst ConTitle = styled.div`\n  font-size: 60px;\n  font-weight: 700;\n  @media screen and (max-width: 500px) {\n    font-size: 40px;\n  }\n`;\n\nconst Release = styled.div`\n  margin: 30px 0 20px 0;\n  font-size: 20px;\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n  }\n`;\n\nconst Genres = styled.div``;\n\nconst RunTime = styled.div`\n  margin: 20px 0;\n`;\n\nconst Desc = styled.div`\n  width: 70%;\n  line-height: 32px;\n  font-size: 18px;\n  font-weight: 300;\n  opacity: 0.7;\n  margin-top: 50px;\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    font-size: 14px;\n    margin-top: 30px;\n    line-height: 25px;\n  }\n`;\n\nexport const Detail = () => {\n  const params = useParams();\n  const [detail, setDetail] = useState();\n\n  useEffect(() => {\n    const movieDetailData = async () => {\n      try {\n        const { data: movieDetail } = await moviesApi.movieDetail(params.id);\n        setDetail(movieDetail);\n      } catch (error) {}\n    };\n    movieDetailData();\n  }, [params]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>상세 | PaitMovie</title>\n      </Helmet>\n      <Container>\n        <ConWrap>\n          <CoverImg\n            style={{\n              backgroundImage: `url(https://image.tmdb.org/t/p/original/${\n                detail && detail.backdrop_path\n              })`,\n            }}\n          />\n          <Con>\n            <ConTitle>{detail && detail.title}</ConTitle>\n            <Release>개봉일: {detail && detail.release_date}</Release>\n            <Genres>\n              장르 : &nbsp;\n              {detail &&\n                detail.genres.map((genre) => (\n                  <span key={genre.id}>{genre.name}, &nbsp;</span>\n                ))}\n            </Genres>\n            <RunTime>런타임: &nbsp;{detail?.runtime} 분</RunTime>\n            <Desc>{detail?.overview}</Desc>\n          </Con>\n        </ConWrap>\n      </Container>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"../../swiper/swiper.min.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NowWrap = styled.div``;\n\nconst NowPlayTitle = styled.div`\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  margin-top: 100px;\n  @media screen and (max-width: 500px) {\n    font-size: 25px;\n    margin-top: 50px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst ConTitle = styled.h3`\n  font-size: 18px;\n  margin-top: 10px;\n  @media screen and (max-width: 500px) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n\nconst ConBg = styled.div`\n  width: 100%;\n  height: 200px;\n  background-size: cover;\n  background-position: center;\n  @media screen and (max-width: 500px) {\n    height: 100px;\n  }\n`;\n\nSwiperCore.use([Navigation]);\n\nexport const Content = ({ title, movie }) => {\n  const params = {\n    slidesPerView: 5,\n    spaceBetween: 20,\n    breakpoints: {\n      1024: {\n        slidesPerView: 5,\n        spaceBetween: 20,\n      },\n      320: {\n        slidesPerView: 2.2,\n        spaceBetween: 10,\n      },\n    },\n  };\n  return (\n    <NowWrap>\n      <NowPlayTitle>{title}</NowPlayTitle>\n      <Swiper navigation {...params}>\n        {movie &&\n          movie.map((now) => (\n            <SwiperSlide\n              className=\"swiper-container\"\n              key={now.id}\n              /* style={{ width: \"360px\" }} */\n            >\n              <Link to={{ pathname: `/detail/${now.id}` }}>\n                <ConBg\n                  style={{\n                    backgroundImage: `url(https://image.tmdb.org/t/p/original/${\n                      now && now.backdrop_path\n                    })`,\n                  }}\n                />\n                <ConTitle>{now.title}</ConTitle>\n              </Link>\n            </SwiperSlide>\n          ))}\n      </Swiper>\n    </NowWrap>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"../../components/Container\";\nimport { moviesApi } from \"../../api\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Content } from \"./Content\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Main = styled.section`\n  width: 100%;\n  height: 55vh;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  @media screen and (max-width: 500px) {\n    background-size: cover;\n    background-position: top;\n  }\n`;\n\nconst TitleWrap = styled.div`\n  width: 540px;\n  padding: 200px 0 0 80px;\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    padding: 250px 15px 0 15px;\n  }\n`;\n\nconst Title = styled.h3`\n  font-size: 70px;\n  font-weight: 700;\n  line-height: 90px;\n  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  @media screen and (max-width: 500px) {\n    font-size: 50px;\n    line-height: 60px;\n  }\n`;\n\nconst SubTitle = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-top: 30px;\n  line-height: 30px;\n  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n    line-height: 20px;\n    margin-top: 20px;\n  }\n`;\n\nexport const Home = () => {\n  const [nowPlaying, setNowPlaying] = useState();\n  const [upComing, setUpComing] = useState();\n  const [popular, setpPopular] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const movieData = async () => {\n      try {\n        const {\n          data: { results: nowPlaying },\n        } = await moviesApi.nowPlaying();\n        setNowPlaying(nowPlaying);\n\n        const {\n          data: { results: upComing },\n        } = await moviesApi.upComing();\n        setUpComing(upComing);\n\n        const {\n          data: { results: popular },\n        } = await moviesApi.popular();\n        setpPopular(popular);\n\n        setLoading(false);\n      } catch (error) {}\n    };\n    movieData();\n  }, []);\n\n  // console.log(\"현재상영\", nowPlaying);\n  // console.log(\"업커밍\", upComing);\n  // console.log(\"인기\", popular);\n  // console.log(nowPlaying[0].backdrop_path);\n\n  return (\n    <div>\n      <Helmet>\n        <title>홈 | PaitMovie</title>\n      </Helmet>\n      {loading ? (\n        \"loading\"\n      ) : (\n        <>\n          <Main\n            style={{\n              backgroundImage: `url(https://image.tmdb.org/t/p/original/${\n                nowPlaying && nowPlaying[0].backdrop_path\n              })`,\n            }}\n          >\n            <TitleWrap>\n              <Title>{nowPlaying && nowPlaying[0].title}</Title>\n              <SubTitle>\n                {nowPlaying && nowPlaying[0].overview.slice(0, 50) + \"...\"}\n              </SubTitle>\n            </TitleWrap>\n          </Main>\n          <Container>\n            <Content title={\"현재 상영 영화\"} movie={nowPlaying} />\n\n            <Content title={\"개봉 예정 영화\"} movie={upComing} />\n\n            <Content title={\"인기 영화\"} movie={popular} />\n          </Container>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { moviesApi } from \"../../api\";\nimport { Container } from \"../../components/Container\";\n\nconst ConWrap = styled.div`\n  margin-top: 80px;\n`;\n\nconst Title = styled.h3`\n  font-size: 50px;\n  font-weight: 700;\n  margin: 50px 0;\n`;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  all: unset;\n  width: 100%;\n  padding: 20px 0 20px 20px;\n  border: 1px solid #333;\n  font-size: 18px;\n`;\n\nconst Con = styled.div`\n  width: 100%;\n  display: inline-grid;\n  grid-template-columns: repeat(5, 1fr);\n  row-gap: 50px;\n  column-gap: 20px;\n  margin-top: 100px;\n`;\n\nconst ItemWrap = styled.div``;\n\nconst Bg = styled.div`\n  width: 100%;\n  height: 200px;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst ItemTitle = styled.div`\n  font-size: 18px;\n  margin-top: 10px;\n`;\n\nexport const Search = () => {\n  const [search, setSearch] = useState(\"\");\n  const { register, getValues, handleSubmit } = useForm({\n    mode: \"onChange\",\n  });\n\n  const onSubmit = async () => {\n    const { term } = getValues();\n\n    if (term !== \"\") {\n      const {\n        data: { results },\n      } = await moviesApi.search(term);\n      setSearch(results);\n    }\n  };\n\n  return (\n    <Container>\n      <Helmet>\n        <title>검색 | PaitMovie</title>\n      </Helmet>\n      <ConWrap>\n        <Title>영화 검색</Title>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Input\n            {...register(\"term\", {\n              required: true,\n            })}\n            type=\"search\"\n            placeholder=\"영화 제목 검색..\"\n          />\n        </Form>\n\n        <Con>\n          {search &&\n            search.map((term) => (\n              <Link to={`/detail/${term.id}`} key={term.id}>\n                <ItemWrap>\n                  <Bg\n                    style={{\n                      backgroundImage: `url(https://image.tmdb.org/t/p/original/${term.backdrop_path})`,\n                    }}\n                  />\n                  <ItemTitle>{term.title}</ItemTitle>\n                </ItemWrap>\n              </Link>\n            ))}\n        </Con>\n      </ConWrap>\n    </Container>\n  );\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nexport const GlobalStyles = createGlobalStyle`\n    ${reset}\n\n    *{ box-sizing:border-box}\n\n    a{\n        text-decoration: none;\n        color:white;\n    }\n\n    body{\n        background-color: #1d1d1d;\n        font-family: 'Noto Sans KR', sans-serif;\n        letter-spacing: -1px;\n        word-break: keep-all;\n        color: white;\n        \n    }\n`;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Footer } from \"./components/Footer\";\nimport { Header } from \"./components/Header\";\nimport { ScrollTop } from \"./components/ScrollTop\";\nimport { Detail } from \"./routes/Detail/Detail\";\nimport { Home } from \"./routes/Home/Home\";\nimport { Search } from \"./routes/Search/Search\";\nimport { GlobalStyles } from \"./styeld\";\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalStyles />\n      <ScrollTop />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <Detail />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <App />\n    </HelmetProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}